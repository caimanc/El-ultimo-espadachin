[gd_scene load_steps=6 format=2]

[ext_resource path="res://assets/art/tileset/tileset.tres" type="TileSet" id=2]
[ext_resource path="res://assets/theme/fonts/kenney_mini_square.tres" type="DynamicFontData" id=3]
[ext_resource path="res://assets/theme/user_interface.tres" type="Theme" id=4]

[sub_resource type="GDScript" id=2]
script/source = "extends Control

onready var grid_container = $ColorRect/CenterContainer/VBoxContainer/GridContainer
onready var label =  $ColorRect/CenterContainer/VBoxContainer/Label
onready var http = $HTTPRequest
onready var leaderboard
onready var index_level = 0
onready var levels = [\"level1\", \"level2\"]

func _ready():
	
	label.set_text(\"leaderboard\\n\" + levels[index_level])
	load_leaderboard(levels[index_level])

func load_leaderboard(level):
	
	reset_grid_container()
	
	Firebase.get_leaderboard(\"leaderboard-\"+ level + \"/\", http)
	yield(get_tree().create_timer(1.5), \"timeout\")
	
	var i = 1
	for element in Firebase.leaderboard:
		add_new_entry(str(i), element['user'], element['score'])
		i = i + 1
		
func reset_grid_container():
	for n in grid_container.get_children():
		grid_container.remove_child(n)
		n.queue_free()
	
	var position_label = Label.new()
	var user_label = Label.new()
	var score_label = Label.new()
	
	position_label.text = \"posistion \"
	user_label.text = \"user \"
	score_label.text = \"score \"
	
	grid_container.add_child(position_label)
	grid_container.add_child(user_label)
	grid_container.add_child(score_label)
	
func add_new_entry(position, user, score):
	
	var position_label = Label.new()
	var user_label = Label.new()
	var score_label = Label.new()
	
	position_label.text = position + \" \"
	user_label.text = user + \" \"
	score_label.text = score + \" \"
	
	if user == Firebase.username:
		position_label.add_color_override(\"font_color\", Color.red)
		user_label.add_color_override(\"font_color\", Color.red)
		score_label.add_color_override(\"font_color\", Color.red)
		
	
	grid_container.add_child(position_label)
	grid_container.add_child(user_label)
	grid_container.add_child(score_label)


func _on_Back_pressed():
	return get_tree().change_scene(\"res://src/UserInterface/Online.tscn\")


func _on_Next_pressed():
	
	reset_grid_container()
	
	index_level = index_level + 1
	if index_level > len(levels):
		index_level = 0
	
	label.set_text(\"leaderboard\\n\" + levels[index_level])
	
	Firebase.get_leaderboard(\"leaderboard-\"+ levels[index_level] + \"/\", http)
	yield(get_tree().create_timer(3), \"timeout\")
	
	var i = 1
	for element in Firebase.leaderboard:
		add_new_entry(str(i), element['user'], element['score'])
		i = i + 1
	
"

[sub_resource type="DynamicFont" id=1]
size = 44
font_data = ExtResource( 3 )

[node name="Leaderboard" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
script = SubResource( 2 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="BackgroundTileMap" type="TileMap" parent="."]
position = Vector2( 0.366, 0 )
tile_set = ExtResource( 2 )
format = 1
tile_data = PoolIntArray( -196597, -1610612736, 0, -131057, 0, 0, -65529, 1073741824, 0, -65524, -1610612736, 0, 0, 0, 0, 3, 1073741824, 0, 9, 1073741824, 0, 15, 0, 0, 65542, 1073741824, 0, 131084, 0, 0, 196611, 1073741824, 0, 196623, 0, 0, 262144, 1073741824, 0, 262154, 1073741824, 0, 327687, 1073741824, 0, 393229, -1610612736, 0, 458755, 1073741824, 0 )

[node name="ColorRect" type="ColorRect" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
theme = ExtResource( 4 )
color = Color( 0, 0, 0, 0.294118 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CenterContainer" type="CenterContainer" parent="ColorRect"]
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="ColorRect/CenterContainer"]
margin_left = 218.0
margin_top = 138.0
margin_right = 582.0
margin_bottom = 341.0
rect_min_size = Vector2( 300, 200 )
custom_constants/separation = 6
alignment = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="ColorRect/CenterContainer/VBoxContainer"]
margin_right = 364.0
margin_bottom = 55.0
custom_fonts/font = SubResource( 1 )
text = "leaderboard"
align = 1
valign = 1

[node name="MarginContainer" type="MarginContainer" parent="ColorRect/CenterContainer/VBoxContainer"]
margin_top = 61.0
margin_right = 364.0
margin_bottom = 81.0
rect_min_size = Vector2( 0, 20 )

[node name="GridContainer" type="GridContainer" parent="ColorRect/CenterContainer/VBoxContainer"]
margin_top = 87.0
margin_right = 364.0
margin_bottom = 125.0
columns = 3

[node name="Position" type="Label" parent="ColorRect/CenterContainer/VBoxContainer/GridContainer"]
margin_right = 134.0
margin_bottom = 38.0
text = "Position "

[node name="User" type="Label" parent="ColorRect/CenterContainer/VBoxContainer/GridContainer"]
margin_left = 138.0
margin_right = 222.0
margin_bottom = 38.0
text = "user "

[node name="Score" type="Label" parent="ColorRect/CenterContainer/VBoxContainer/GridContainer"]
margin_left = 226.0
margin_right = 329.0
margin_bottom = 38.0
text = "score "

[node name="MarginContainer2" type="MarginContainer" parent="ColorRect/CenterContainer/VBoxContainer"]
margin_top = 131.0
margin_right = 364.0
margin_bottom = 151.0
rect_min_size = Vector2( 0, 20 )

[node name="HBoxContainer" type="HBoxContainer" parent="ColorRect/CenterContainer/VBoxContainer"]
margin_top = 157.0
margin_right = 364.0
margin_bottom = 203.0

[node name="Back" type="Button" parent="ColorRect/CenterContainer/VBoxContainer/HBoxContainer"]
margin_right = 180.0
margin_bottom = 46.0
rect_min_size = Vector2( 180, 40 )
size_flags_horizontal = 4
text = "Back"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Next" type="Button" parent="ColorRect/CenterContainer/VBoxContainer/HBoxContainer"]
margin_left = 184.0
margin_right = 364.0
margin_bottom = 46.0
rect_min_size = Vector2( 180, 40 )
size_flags_horizontal = 4
text = "Next"

[node name="HTTPRequest" type="HTTPRequest" parent="."]

[node name="Tween" type="Tween" parent="."]

[connection signal="pressed" from="ColorRect/CenterContainer/VBoxContainer/HBoxContainer/Back" to="." method="_on_Back_pressed"]
[connection signal="pressed" from="ColorRect/CenterContainer/VBoxContainer/HBoxContainer/Next" to="." method="_on_Next_pressed"]
